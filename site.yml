---
- name: StocktoHtmlInformationTool
  gather_facts: false
  hosts: localhost
  tasks:

  - name: Generate a timestamp
    set_fact:
      timestamp: "{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"

  - name: Retrieve list of tickers that we want to check from Holden's personal GitHub.
    uri:
      method: GET
      return_content: yes
      url: "{{ list_url }}"
      validate_certs: no
    register: fetch_result

  - name: Check if old status file exists
    stat:
      path: state.json
    register: stat_result

  - name: Grab values of previous run to calculate differences.
    set_fact:
      old_quotes: "{{ lookup('file','state.json') }}"
    when: stat_result.stat.exists == true

  - name: Assign content from previous URI call to a non-json object. (I don't know if this is actually needed.)
    set_fact:
      result_friendly: "{{ fetch_result.content | from_json }}"

  - name: Look up quotes for specified ticker symbols.
    uri:
      method: GET
      return_content: yes
      url: "{{ base_av_url }}function={{ av_function }}&symbol={{ item }}&apikey={{ av_api_key }}"
      status_code: 200
      validate_certs: no
    register: quote_list
    loop: "{{ result_friendly.tickers }}"

  - name: Create a dict that is ticker:price.
    set_fact:
      quotes: "{{ quotes | default({}) | combine({ item.json['Global Quote']['01. symbol']: item.json['Global Quote']['05. price'] | float}) }}"
    loop: "{{ quote_list.results }}"

  - name: Make sure changes.txt exists
    stat:
      path: changes.txt
    register: changes_stat

  - name: Create changes.txt if you need to
    copy:
      content: ""
      dest: changes.txt
    when: changes_stat.stat.exists == false      

  - name: Compare Old and New Quotes
    lineinfile:
      path: changes.txt
      line: "{{ item }} changed!  Old Price: {{ old_quotes[item]}} New Price: {{ quotes[item] }} Difference: {{ old_quotes[item] - quotes[item] }}- {{ timestamp }}"
    loop: "{{ result_friendly.tickers }}"
    when: old_quotes[item] != quotes[item]

  - name: Dump results to a "state" file
    local_action: copy content="{{ quotes }}" dest=state.json

  - name: Create index.html
    template:
      src: templates/index.html.j2
      dest: index.html

  - name: Push index out to remote server.  I have an SSH key on my machine that allows me to talk to this server.
    shell: "scp -P 443 index.html root@holden.gg:/var/www/html/"
    ignore_errors: true
